version: '3.8'

services:
  app:
    build:
      context: ../
      dockerfile: deploy/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ../:/app
    env_file:
      - .env.example
    environment:
      DATABASE_URL: ${DATABASE_URL}
    depends_on:
      - db
      - test
    networks:
      - app-network
  db:
    image: postgres:15
    env_file:
      - .env.example
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network
  test-db:
    image: postgres:15
    env_file:
      - .env.example
    environment:
      POSTGRES_USER: ${TEST_DB_USER}
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
      POSTGRES_DB: ${TEST_DB_NAME}
    ports:
      - "5433:5432"
    networks:
      - app-network
  test:
    build:
      context: ../
      dockerfile: deploy/Dockerfile
      target: test-runner
    env_file:
      - .env.example
    environment:
      TEST_DB_URL: ${TEST_DB_URL}
    networks:
      - app-network
    depends_on:
      - test-db
    entrypoint: [ "sh", "-c", "go test -v ./..." ]

networks:
  app-network:
    driver: bridge

volumes:
  db_data: