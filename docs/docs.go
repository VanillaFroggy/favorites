// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/favorites": {
            "get": {
                "description": "Responds with the page of favorites by owner_type, owner_id, limit and offset as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Get favorites array",
                "parameters": [
                    {
                        "enum": [
                            "USER",
                            "GROUP"
                        ],
                        "type": "string",
                        "description": "type of owner",
                        "name": "owner_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of owner in uuid format",
                        "name": "owner_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "size of page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "count of entries to skip before page",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/favorites_internal_models_favorite.Favorite"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new favorite entry and responses with it as JSON.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Create new favorite",
                "parameters": [
                    {
                        "description": "Favorite to create",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/favorites_internal_handlers_dto.CreateFavoriteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/favorites_internal_models_favorite.Favorite"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        },
        "/favorites/id": {
            "delete": {
                "description": "Deletes favorite entry and responses with NoContent Code.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Delete favorite by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of favorite to delete in uuid format",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/gin.H"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "favorites_internal_handlers_dto.CreateFavoriteRequest": {
            "type": "object",
            "required": [
                "object_id",
                "object_type",
                "owner_id",
                "owner_type",
                "project_id"
            ],
            "properties": {
                "object_id": {
                    "type": "string"
                },
                "object_type": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "owner_type": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string"
                }
            }
        },
        "favorites_internal_models_favorite.Favorite": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "object_id": {
                    "type": "string"
                },
                "object_type": {
                    "$ref": "#/definitions/favorites_internal_models_favorite.ObjectType"
                },
                "owner_id": {
                    "type": "string"
                },
                "owner_type": {
                    "$ref": "#/definitions/favorites_internal_models_favorite.OwnerType"
                },
                "project_id": {
                    "type": "string"
                }
            }
        },
        "favorites_internal_models_favorite.ObjectType": {
            "type": "string",
            "enum": [
                "DOCUMENT",
                "IMAGE",
                "VIDEO"
            ],
            "x-enum-varnames": [
                "ObjectTypeDocument",
                "ObjectTypeImage",
                "ObjectTypeVideo"
            ]
        },
        "favorites_internal_models_favorite.OwnerType": {
            "type": "string",
            "enum": [
                "USER",
                "GROUP"
            ],
            "x-enum-varnames": [
                "OwnerTypeUser",
                "OwnerTypeGroup"
            ]
        },
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/favorites",
	Schemes:          []string{},
	Title:            "Favorites API",
	Description:      "A favorites management service API in Go using Gin framework.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
